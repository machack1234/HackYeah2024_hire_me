services:
  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres/postgres_data:/var/lib/postgresql/data
        #      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=IsThisReallySecretIDontThinkSoLol
      - POSTGRES_USER=hire_me
      - POSTGRES_DB=hire_me_db
    networks:
      - hiremenetwork
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "hire_me", "-d", "hire_me_db"]
  app:
    build:
      context: .
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - hiremenetwork
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hire_me_db
#      - SPRING_DATASOURCE_USERNAME=hire_me
#      - SPRING_DATASOURCE_PASSWORD=compose-postgres
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

volumes:
  postgres_data:
    driver: local

networks:
  hiremenetwork:
    driver: bridge
